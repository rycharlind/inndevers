import{_ as s,c as a,o as n,a as l}from"./app.2c8f7a41.js";const d=JSON.parse('{"title":"Machine Learning using Apache Spark.","description":"Machine Learning using Apache Spark.","frontmatter":{"title":"Machine Learning using Apache Spark.","description":"Machine Learning using Apache Spark.","head":[["meta",{"name":"description","content":"Machine Learning using Apache Spark."}],["meta",{"name":"keywords","content":"apache-spark scala machine-learning"}]]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Prerequisites","slug":"prerequisites","link":"#prerequisites","children":[]},{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[]},{"level":2,"title":"Developing ML Models","slug":"developing-ml-models","link":"#developing-ml-models","children":[]},{"level":2,"title":"Conclusion","slug":"conclusion","link":"#conclusion","children":[]}],"relativePath":"articles/spark-machine-learning.md"}'),e={name:"articles/spark-machine-learning.md"},p=l(`<h1 id="machine-learning-with-apache-spark-on-scala" tabindex="-1">Machine Learning with Apache Spark on Scala. <a class="header-anchor" href="#machine-learning-with-apache-spark-on-scala" aria-hidden="true">#</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h2><p>This tutorial will provide an introduction to learning Machine Learning using Apache Spark in Scala. It will cover the basics of how to install Spark, use its API and develop ML models in Scala.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-hidden="true">#</a></h2><p>Before starting the tutorial, make sure you have the following:</p><ul><li><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noreferrer">Java Development Kit (JDK)</a></li><li><a href="https://spark.apache.org/" target="_blank" rel="noreferrer">Apache Spark</a></li><li><a href="https://www.scala-lang.org/" target="_blank" rel="noreferrer">Scala</a></li></ul><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-hidden="true">#</a></h2><ol><li><p>Install the Java Development Kit (JDK) from the link provided in the Prerequisites section.</p></li><li><p>Install Apache Spark from the link provided.</p></li><li><p>Install Scala from the link provided.</p></li></ol><h2 id="developing-ml-models" tabindex="-1">Developing ML Models <a class="header-anchor" href="#developing-ml-models" aria-hidden="true">#</a></h2><ol><li>Open the Spark shell and import the required packages:</li></ol><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">org</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">apache</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">spark</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">ml</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">{</span><span style="color:#FFCB6B;">Pipeline</span><span style="color:#A6ACCD;">, </span><span style="color:#FFCB6B;">PipelineModel</span><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">org</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">apache</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">spark</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">ml</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">classification</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">LogisticRegression</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">org</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">apache</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">spark</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">ml</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">evaluation</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">BinaryClassificationEvaluator</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">org</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">apache</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">spark</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">ml</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">feature</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">{</span><span style="color:#FFCB6B;">HashingTF</span><span style="color:#A6ACCD;">, </span><span style="color:#FFCB6B;">Tokenizer</span><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">org</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">apache</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">spark</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">ml</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">tuning</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">{</span><span style="color:#FFCB6B;">CrossValidator</span><span style="color:#A6ACCD;">, </span><span style="color:#FFCB6B;">ParamGridBuilder</span><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="2"><li>Create the data frame for training the model:</li></ol><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> training </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> spark.createDataFrame(</span><span style="color:#FFCB6B;">Seq</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  (</span><span style="color:#F78C6C;">0L</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a b c d e spark</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">1.0</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">  (</span><span style="color:#F78C6C;">1L</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">b d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0.0</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">  (</span><span style="color:#F78C6C;">2L</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">spark f g h</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">1.0</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">  (</span><span style="color:#F78C6C;">3L</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hadoop mapreduce</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0.0</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">)).toDF(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">label</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ol start="3"><li>Define the tokenizer and the hashing term frequency:</li></ol><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> tokenizer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Tokenizer</span><span style="color:#A6ACCD;">().setInputCol(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">).setOutputCol(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">words</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> hashingTF </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HashingTF</span><span style="color:#A6ACCD;">().setNumFeatures(</span><span style="color:#F78C6C;">1000</span><span style="color:#A6ACCD;">).setInputCol(tokenizer.getOutputCol).setOutputCol(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">features</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="4"><li>Create the logistic regression model:</li></ol><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> lr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LogisticRegression</span><span style="color:#A6ACCD;">().setMaxIter(</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">).setRegParam(</span><span style="color:#F78C6C;">0.001</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><ol start="5"><li>Create the pipeline:</li></ol><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> pipeline </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Pipeline</span><span style="color:#A6ACCD;">().setStages(</span><span style="color:#FFCB6B;">Array</span><span style="color:#A6ACCD;">(tokenizer, hashingTF, lr))</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><ol start="6"><li>Create the parameter grid:</li></ol><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> paramGrid </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ParamGridBuilder</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">  .addGrid(hashingTF.numFeatures, </span><span style="color:#FFCB6B;">Array</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">1000</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">  .addGrid(lr.regParam, </span><span style="color:#FFCB6B;">Array</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0.01</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">  .build()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="7"><li>Create the cross-validator:</li></ol><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> cv </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CrossValidator</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">  .setEstimator(pipeline)</span></span>
<span class="line"><span style="color:#A6ACCD;">  .setEvaluator(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BinaryClassificationEvaluator</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  .setEstimatorParamMaps(paramGrid)</span></span>
<span class="line"><span style="color:#A6ACCD;">  .setNumFolds(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="8"><li>Train the model and save the model to a file:</li></ol><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> cvModel </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv.fit(training)</span></span>
<span class="line"><span style="color:#A6ACCD;">cvModel.write.overwrite().save(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/path/to/model.file</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="9"><li>Load the model and use it to make predictions:</li></ol><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> model </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PipelineModel</span><span style="color:#A6ACCD;">.load(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/path/to/model.file</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> predictions </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> model.transform(test)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-hidden="true">#</a></h2><p>This tutorial provided an introduction to learning Machine Learning using Apache Spark in Scala. We covered the basics of how to install Spark, use its API and develop ML models in Scala. We also saw an example of how to create a logistic regression model and use it to make predictions.</p>`,29),o=[p];function r(t,c,i,C,y,F){return n(),a("div",null,o)}const A=s(e,[["render",r]]);export{d as __pageData,A as default};
