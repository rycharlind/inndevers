import{_ as l,c as e,b as a,d as n,e as p,a as o,o as r,r as t}from"./app.2c8f7a41.js";const c="/assets/spark_scala_container.svg",f=JSON.parse('{"title":"Spark on Scala basic example","description":"A basic example of how to get started with Apache Spark on Scala.","frontmatter":{"title":"Spark on Scala basic example","description":"A basic example of how to get started with Apache Spark on Scala.","head":[["meta",{"name":"description","content":"A basic example of how to use Apache Spark with Scala."}],["meta",{"name":"keywords","content":"apache-spark data-engineering scala"}]]},"headers":[{"level":2,"title":"Overview","slug":"overview","link":"#overview","children":[]},{"level":2,"title":"1. Set up Scala Build Tool (sbt).","slug":"_1-set-up-scala-build-tool-sbt","link":"#_1-set-up-scala-build-tool-sbt","children":[]},{"level":2,"title":"2. Create new project directory.","slug":"_2-create-new-project-directory","link":"#_2-create-new-project-directory","children":[]},{"level":2,"title":"3. Open project in Visual Studio Code.","slug":"_3-open-project-in-visual-studio-code","link":"#_3-open-project-in-visual-studio-code","children":[]},{"level":2,"title":"4. Create SBT build file.","slug":"_4-create-sbt-build-file","link":"#_4-create-sbt-build-file","children":[]},{"level":2,"title":"5. Create main class.","slug":"_5-create-main-class","link":"#_5-create-main-class","children":[]},{"level":2,"title":"6. Set up Apache Spark.","slug":"_6-set-up-apache-spark","link":"#_6-set-up-apache-spark","children":[]},{"level":2,"title":"7. Create sample data files.","slug":"_7-create-sample-data-files","link":"#_7-create-sample-data-files","children":[{"level":3,"title":"Users.csv","slug":"users-csv","link":"#users-csv","children":[]},{"level":3,"title":"Posts.csv","slug":"posts-csv","link":"#posts-csv","children":[]},{"level":3,"title":"Comments.csv","slug":"comments-csv","link":"#comments-csv","children":[]}]},{"level":2,"title":"8. Read CSV files into DataFrames.","slug":"_8-read-csv-files-into-dataframes","link":"#_8-read-csv-files-into-dataframes","children":[]},{"level":2,"title":"9. Join DataFrames","slug":"_9-join-dataframes","link":"#_9-join-dataframes","children":[]},{"level":2,"title":"10. Show the outputs.","slug":"_10-show-the-outputs","link":"#_10-show-the-outputs","children":[]},{"level":2,"title":"11. Final Code Review","slug":"_11-final-code-review","link":"#_11-final-code-review","children":[]},{"level":2,"title":"12. Run your code.","slug":"_12-run-your-code","link":"#_12-run-your-code","children":[]},{"level":2,"title":"Conclusion","slug":"conclusion","link":"#conclusion","children":[]}],"relativePath":"articles/spark-scala-basic-example.md"}'),i={name:"articles/spark-scala-basic-example.md"},D=n("h1",{id:"apache-spark-on-scala-basic-example",tabindex:"-1"},[p("Apache Spark on Scala basic example "),n("a",{class:"header-anchor",href:"#apache-spark-on-scala-basic-example","aria-hidden":"true"},"#")],-1),C=o('<p><img src="'+c+`" alt="Apache Spark"></p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-hidden="true">#</a></h2><p><a href="https://spark.apache.org/" target="_blank" rel="noreferrer">Apache Spark</a> is a unified analytics engine for large-scale data processing. <a href="https://www.scala-lang.org/" target="_blank" rel="noreferrer">Scala</a> is a programming language that combines object-oriented and functional programming in one concise, high-level language. Combined they are used to create powerful data applications in the ETL/ELT, ML and AI universes.</p><p>This article will walk you through a basic example of setting up and performing fundamental data operations that will help get your feet wet with modern big data engineering concepts.</p><p>The full code base for this example is published <a href="https://github.com/rycharlind/spark-scala-examples/blob/master/src/main/scala/basic/BaseExample.scala" target="_blank" rel="noreferrer">here</a> if you would like to go straight to the source.</p><h2 id="_1-set-up-scala-build-tool-sbt" tabindex="-1">1. Set up Scala Build Tool (sbt). <a class="header-anchor" href="#_1-set-up-scala-build-tool-sbt" aria-hidden="true">#</a></h2><p>Download and install <a href="https://www.scala-sbt.org/download.html" target="_blank" rel="noreferrer">sbt</a>.</p><p><a href="https://www.scala-sbt.org/" target="_blank" rel="noreferrer">sbt</a> is Scala&#39;s interactive build tool. It will allow you run your app, define project dependencies, apply plugins and more. Review the <a href="https://www.scala-sbt.org/1.x/docs/" target="_blank" rel="noreferrer">sbt docs</a> for more info on how to use it.</p><p>After you have downloaded and installed it, run <code>sbt help</code> to ensure that it is installed properly.</p><h2 id="_2-create-new-project-directory" tabindex="-1">2. Create new project directory. <a class="header-anchor" href="#_2-create-new-project-directory" aria-hidden="true">#</a></h2><p>Create a new directory called <code>spark-scala-examples</code> and navigate into it from your terminal. If you&#39;d like, you can name this directory whatever you want. We will refer to this as the <code>root</code> of your project.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">mkdir spark-scala-examples </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> spark-scala-examples</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="_3-open-project-in-visual-studio-code" tabindex="-1">3. Open project in Visual Studio Code. <a class="header-anchor" href="#_3-open-project-in-visual-studio-code" aria-hidden="true">#</a></h2><p>If you don&#39;t already have it installed, go <a href="https://code.visualstudio.com/download" target="_blank" rel="noreferrer">here</a> and install it for your operating system.</p><p><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">Visual Stdio Code</a> (VS Code) is an Integrated Development Environment tool, or IDE for short. This is what we will use to edit our code files for this project.</p><p>You may choose to use other IDE&#39;s if you want. Other popular IDE&#39;s include <a href="https://www.jetbrains.com/idea/" target="_blank" rel="noreferrer">IntelliJ</a> and <a href="https://atom.io/" target="_blank" rel="noreferrer">Atom</a>.</p><h2 id="_4-create-sbt-build-file" tabindex="-1">4. Create SBT build file. <a class="header-anchor" href="#_4-create-sbt-build-file" aria-hidden="true">#</a></h2><p>From within Visual Studio Code, create a new file inside the <code>root</code> directory called <code>build.sbt</code> and add the following code to it.</p><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">ThisBuild</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> scalaVersion </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2.12.17</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">ThisBuild</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> organization </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.inndevers</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> sparkVersion </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">3.2.2</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">lazy</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> root </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (project in file(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">  .settings(</span></span>
<span class="line"><span style="color:#A6ACCD;">    name </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SparkScalaExamples</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    libraryDependencies </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">org.apache.spark</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">%%</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">spark-core</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;"> sparkVersion,</span></span>
<span class="line"><span style="color:#A6ACCD;">    libraryDependencies </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">org.apache.spark</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">%%</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">spark-sql</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;"> sparkVersion,</span></span>
<span class="line"><span style="color:#A6ACCD;">    libraryDependencies </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">org.scalatest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">%%</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scalatest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">3.2.7</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Test</span></span>
<span class="line"><span style="color:#A6ACCD;">  )</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>This file should stay at the <code>root</code> of your project. Let&#39;s review some of the key lines in here.</p><ul><li>Line 1: Indicates the version of Scala you will use for this projects. In this case, it&#39;s <code>2.12.17</code>.</li><li>Line 2: Indicates your package organization. You can change this to whatever you&#39;d like.</li><li>Line 4: Indicates the version fo Spark we will use. In this case, it&#39;s <code>3.2.2</code>.</li><li>Line 6: Initiates the root project settings.</li><li>Line 8: Configures the name of the app. You can make this whatever you&#39;d like.</li><li>Lines 9-11: These identify the dependencies required for our project. As you can see we have <code>spark-core</code> and <code>spark-sql</code>. We also have <code>scalatest</code> which we do not use in this demo, however it&#39;s always good to add when you&#39;re ready to jump into <a href="https://www.scalatest.org/user_guide/writing_your_first_test" target="_blank" rel="noreferrer">Unit Testing</a>.</li></ul><h2 id="_5-create-main-class" tabindex="-1">5. Create main class. <a class="header-anchor" href="#_5-create-main-class" aria-hidden="true">#</a></h2><p>Create the main <code>Scala</code> class that will be the entry point into your app. We&#39;ll call this class <code>BasicExample.scala</code>. But first, lets create the app directory structure.</p><p>From within the <code>root</code> of your project, create the following directory structure.</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 src</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2514\u2500\u2500 main</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502       \u2514\u2500\u2500 scala</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502           \u2514\u2500\u2500 basic</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502               \u2514\u2500\u2500 BasicExample.scala</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2514\u2500\u2500 build.sbt</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Then, create a file named <code>BasicExample.scala</code> inside of the <code>basic</code> folder and add the following code to it.</p><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">basic</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">object</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BasicExample</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;">args</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">Array</span><span style="color:#A6ACCD;">[</span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Unit</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="_6-set-up-apache-spark" tabindex="-1">6. Set up Apache Spark. <a class="header-anchor" href="#_6-set-up-apache-spark" aria-hidden="true">#</a></h2><p>Import the Apache Spark libraries and update your <code>BasicExample.scala</code> file to build and configure a <code>SparkSession</code>.</p><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki has-highlighted-lines"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">basic</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">org</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">apache</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">spark</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">SparkConf</span></span>
<span class="line highlighted"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">org</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">apache</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">spark</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">sql</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">{</span><span style="color:#FFCB6B;">SparkSession</span><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">object</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BasicExample</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;">args</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">Array</span><span style="color:#A6ACCD;">[</span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Unit</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> conf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SparkConf</span><span style="color:#A6ACCD;">()</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">      .setAppName(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">BasicExample</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">      .setMaster(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">local[*]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> spark </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SparkSession</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">      .builder()</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">      .config(conf)</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">      .getOrCreate()</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><ul><li>Lines 3-4: This is where we <code>import</code> the Spark dependencies into our <code>BasicExample.scala</code> class. You must import your dependencies into your class before using them.</li><li>Lines 9-11: This is where we create our <a href="https://spark.apache.org/docs/latest/configuration.html" target="_blank" rel="noreferrer">Spark Configuration</a>. <ul><li>Line 10: <code>setAppName()</code> - This specifies the name of your Spark application. This can be whatever you&#39;d like.</li><li>Line 11: <code>setMaster()</code> - This specifies the URL to your cluster. Since we will be running this locally for demo purposes, we pass in <code>local[*]</code>. The <code>*</code> means to run it with as many worker threads as logical cores on your machine. You can learn more about the <code>master</code> param <a href="https://spark.apache.org/docs/latest/submitting-applications.html#master-urls" target="_blank" rel="noreferrer">here</a>.</li></ul></li></ul><h2 id="_7-create-sample-data-files" tabindex="-1">7. Create sample data files. <a class="header-anchor" href="#_7-create-sample-data-files" aria-hidden="true">#</a></h2><p>Next, create some sample data files in <code>csv</code> format. Later on we&#39;ll use Spark to read them into a DataFrame and process them.</p><p>In the <code>root</code> of your project, create a new folder called <code>data</code> and three <code>.csv</code> files called <code>users.csv</code>, <code>posts.csv</code> and <code>comments.csv</code>.</p><h3 id="users-csv" tabindex="-1">Users.csv <a class="header-anchor" href="#users-csv" aria-hidden="true">#</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">id,name,created_at</span></span>
<span class="line"><span style="color:#A6ACCD;">1,John Doe,2021-01-01</span></span>
<span class="line"><span style="color:#A6ACCD;">2,Jane Doe,2021-02-01</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="posts-csv" tabindex="-1">Posts.csv <a class="header-anchor" href="#posts-csv" aria-hidden="true">#</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">id,user_id,title,created_at</span></span>
<span class="line"><span style="color:#A6ACCD;">1,1,My Sample Post 1,2022-01-01</span></span>
<span class="line"><span style="color:#A6ACCD;">1,2,My Sample Post 2,2022-03-01</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="comments-csv" tabindex="-1">Comments.csv <a class="header-anchor" href="#comments-csv" aria-hidden="true">#</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">id,user_id,post_id,text,created_at</span></span>
<span class="line"><span style="color:#A6ACCD;">1,1,1,How are you doing?,2022-01-04</span></span>
<span class="line"><span style="color:#A6ACCD;">1,2,1,I am doing well, you?,2022-01-05</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Your directory structure should look like this now.</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 data</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 comments.csv</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 posts.csv</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2514\u2500\u2500 users.csv</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 src</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2514\u2500\u2500 main</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502       \u2514\u2500\u2500 scala</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502           \u2514\u2500\u2500 basic</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502               \u2514\u2500\u2500 BasicExample.scala</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2514\u2500\u2500 build.sbt</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="_8-read-csv-files-into-dataframes" tabindex="-1">8. Read CSV files into DataFrames. <a class="header-anchor" href="#_8-read-csv-files-into-dataframes" aria-hidden="true">#</a></h2><p>Next we&#39;ll create a function within our <code>BaseExample.scala</code> file called <code>readCsv()</code> that can read our csv files into DataFrames.</p><p>A <a href="https://spark.apache.org/docs/latest/sql-programming-guide.html" target="_blank" rel="noreferrer">DataFrame</a> is an in-memory data set organized into named columns and rows. It is conceptually equivalent to a table in a relational database, but with richer optimizations under the hood.</p><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">readCsv</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#A6ACCD;">spark</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">SparkSession</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#A6ACCD;">dataDir</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#A6ACCD;">fileName</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">String</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DataFrame</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  spark.read</span></span>
<span class="line"><span style="color:#A6ACCD;">    .option(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">header</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">true</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    .csv(</span><span style="color:#89DDFF;">s</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">dataDir</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">fileName</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">.csv</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Add the above function underneath your <code>main()</code> function.</p><p>Your <code>BaseExample.scala</code> file should now look like this:</p><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">basic</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">org</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">apache</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">spark</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">SparkConf</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">org</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">apache</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">spark</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">sql</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">{</span><span style="color:#FFCB6B;">SparkSession</span><span style="color:#A6ACCD;">, </span><span style="color:#FFCB6B;">DataFrame</span><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">object</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BasicExample</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;">args</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">Array</span><span style="color:#A6ACCD;">[</span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Unit</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> conf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SparkConf</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">      .setAppName(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">BasicExample</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">      .setMaster(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">local[*]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> spark </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SparkSession</span></span>
<span class="line"><span style="color:#A6ACCD;">      .builder()</span></span>
<span class="line"><span style="color:#A6ACCD;">      .config(conf)</span></span>
<span class="line"><span style="color:#A6ACCD;">      .getOrCreate()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// todo: ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">readCsv</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#A6ACCD;">spark</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">SparkSession</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#A6ACCD;">dataDir</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#A6ACCD;">fileName</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">String</span></span>
<span class="line"><span style="color:#A6ACCD;">  )</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DataFrame</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    spark.read</span></span>
<span class="line"><span style="color:#A6ACCD;">      .option(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">header</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">true</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">      .csv(</span><span style="color:#89DDFF;">s</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">dataDir</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">fileName</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">.csv</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>Next, lets use the newly created <code>readCsv()</code> function to create <code>DataFrames</code> for each of our <code>csv</code> files. Add the following code into your <code>main()</code> function.</p><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> baseDataPath </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sys.env.getOrElse(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">BASE_DATA_PATH</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> userDf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> readCsv(spark, baseDataPath, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">users</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> postDf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> readCsv(spark, baseDataPath, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">posts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> commentDf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> readCsv(spark, baseDataPath, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">comments</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_9-join-dataframes" tabindex="-1">9. Join DataFrames <a class="header-anchor" href="#_9-join-dataframes" aria-hidden="true">#</a></h2><p>Now that we have all three files read into a DataFrame, we can perform join logic to create a single output. Add the following into your <code>main</code> function.</p><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> userDf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> readCsv(spark, baseDataPath, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">users</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> postDf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> readCsv(spark, baseDataPath, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">posts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> commentDf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> readCsv(spark, baseDataPath, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">comments</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> out </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> postDf</span></span>
<span class="line"><span style="color:#A6ACCD;">  .join(userDf, postDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> userDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">  .join(commentDf, postDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> commentDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">post_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">  .select(</span></span>
<span class="line"><span style="color:#A6ACCD;">    userDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">).as(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">    userDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">    postDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">).as(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">post_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">    postDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">created_at</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">).as(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">post_date</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">    commentDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">).as(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">comment_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">    commentDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">created_at</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">).as(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">comment_date</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">    postDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">    commentDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  )</span></span>
<span class="line"><span style="color:#A6ACCD;">  .orderBy(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">post_date</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">comment_date</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>Looking at the code above, you can see that we use Sparks <code>join()</code> function to join multiple DataFrame&#39;s together. After joining all three DataFrame&#39;s together, we use the <code>select()</code> function to only project the columns we need for the final output.</p><h2 id="_10-show-the-outputs" tabindex="-1">10. Show the outputs. <a class="header-anchor" href="#_10-show-the-outputs" aria-hidden="true">#</a></h2><p>Finally, we&#39;ll call the <code>.show()</code> function on our final <code>out</code> DataFrame in order to show the results.</p><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">out.show()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>The <code>.show()</code> function is a special Spark function that allows developers to review their DataFrames in the console. It will default to only showing you the first 20 rows in the DataFrame, however you can overwrite these limits by passing a <code>numRow</code> parameter into the function like this: <code>.show(1000)</code>.</p><h2 id="_11-final-code-review" tabindex="-1">11. Final Code Review <a class="header-anchor" href="#_11-final-code-review" aria-hidden="true">#</a></h2><p>Here&#39;s what your final <code>BasicExample.scala</code> file should look like.</p><div class="language-scala line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">basic</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">org</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">apache</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">spark</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">SparkConf</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">org</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">apache</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">spark</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">sql</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">{</span><span style="color:#FFCB6B;">SparkSession</span><span style="color:#A6ACCD;">, </span><span style="color:#FFCB6B;">DataFrame</span><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">object</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BasicExample</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;">args</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">Array</span><span style="color:#A6ACCD;">[</span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Unit</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> conf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SparkConf</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">      .setAppName(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">BasicExample</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">      .setMaster(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">local[*]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> spark </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SparkSession</span></span>
<span class="line"><span style="color:#A6ACCD;">      .builder()</span></span>
<span class="line"><span style="color:#A6ACCD;">      .config(conf)</span></span>
<span class="line"><span style="color:#A6ACCD;">      .getOrCreate()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> baseDataPath </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sys.env.getOrElse(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">BASE_DATA_PATH</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> userDf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> readCsv(spark, baseDataPath, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">users</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> postDf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> readCsv(spark, baseDataPath, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">posts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> commentDf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> readCsv(spark, baseDataPath, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">comments</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> out </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> postDf</span></span>
<span class="line"><span style="color:#A6ACCD;">      .join(userDf, postDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> userDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">      .join(commentDf, postDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> commentDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">post_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">      .select(</span></span>
<span class="line"><span style="color:#A6ACCD;">        userDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">).as(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">        userDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">        postDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">).as(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">post_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">        postDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">created_at</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">).as(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">post_date</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">        commentDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">).as(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">comment_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">        commentDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">created_at</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">).as(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">comment_date</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">        postDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">        commentDf(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">      )</span></span>
<span class="line"><span style="color:#A6ACCD;">      .orderBy(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">post_date</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">comment_date</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    out.show()</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">readCsv</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#A6ACCD;">spark</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">SparkSession</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#A6ACCD;">dataDir</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#A6ACCD;">fileName</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">String</span></span>
<span class="line"><span style="color:#A6ACCD;">  )</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DataFrame</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    spark.read</span></span>
<span class="line"><span style="color:#A6ACCD;">      .option(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">header</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">true</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">      .csv(</span><span style="color:#89DDFF;">s</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">dataDir</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">fileName</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">.csv</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div><h2 id="_12-run-your-code" tabindex="-1">12. Run your code. <a class="header-anchor" href="#_12-run-your-code" aria-hidden="true">#</a></h2><p>Finally, lets run your code and see the results. You first need to open a Terminal session into your <code>root</code> project. If you are using Visual Studio Code, the easiest way is to go to <code>Terminal</code> in the menu and select <code>New Terminal</code>. This should automatically navigate you to your <code>root</code> directory.</p><p>In the terminal, enter command <code>sbt</code> to start an SBT session. Then enter <code>run</code> to run your application. You should see the following output in your terminal.</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">+-------+--------+-------+----------+----------+------------+----------------+------------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">|user_id|    name|post_id| post_date|comment_id|comment_date|           title|              text|</span></span>
<span class="line"><span style="color:#A6ACCD;">+-------+--------+-------+----------+----------+------------+----------------+------------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">|      1|John Doe|      1|2022-01-01|         1|  2022-01-04|My Sample Post 1|How are you doing?|</span></span>
<span class="line"><span style="color:#A6ACCD;">|      1|John Doe|      1|2022-01-01|         1|  2022-01-05|My Sample Post 1|  I am doing well.|</span></span>
<span class="line"><span style="color:#A6ACCD;">|      2|Jane Doe|      1|2022-03-01|         1|  2022-01-04|My Sample Post 2|How are you doing?|</span></span>
<span class="line"><span style="color:#A6ACCD;">|      2|Jane Doe|      1|2022-03-01|         1|  2022-01-05|My Sample Post 2|  I am doing well.|</span></span>
<span class="line"><span style="color:#A6ACCD;">+-------+--------+-------+----------+----------+------------+----------------+------------------+</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>As you can see from the above results, we joined our <code>userDf</code>, <code>postDf</code> and <code>commentDf</code> to create a single DataFrame and printed the results to the console.</p><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-hidden="true">#</a></h2><p>We&#39;ve learned how to use <a href="https://www.scala-sbt.org/" target="_blank" rel="noreferrer">sbt</a> to create a <a href="https://www.scala-lang.org/" target="_blank" rel="noreferrer">Scala</a> based data application using the <a href="https://spark.apache.org/" target="_blank" rel="noreferrer">Apache Spark</a> framework to read <code>csv</code> files into DataFrames, join them up and produce a unified output. Spark&#39;s DataFrame API is a powerful tool for data engineering operations.</p><p>I highly recommend you continue your research by reading their <a href="https://spark.apache.org/docs/latest/quick-start.html" target="_blank" rel="noreferrer">programming guides</a> and continue your data science/engineering journey.</p>`,70);function y(A,F,u,d,b,m){const s=t("Badge");return r(),e("div",null,[D,a(s,{type:"info",text:"apache-spark"}),a(s,{type:"info",text:"scala"}),a(s,{type:"info",text:"data-engineering"}),C])}const g=l(i,[["render",y]]);export{f as __pageData,g as default};
